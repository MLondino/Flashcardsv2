{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\documents\\\\qualified\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  useEffect(() => {\n    setDeck({});\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await fetch(\"http://localhost:5000/decks\", {\n          signal: abortController.signal\n        });\n        const decksFromAPI = await response.json();\n        setDeck(decksFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    return () => {\n      document.title = \"\";\n      return abortController.abort();\n    };\n  }, []);\n\n  if (deck.id) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/decks/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"create-deck\",\n          children: \"+Create New Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            name: \"view-deck\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            name: \"study-deck\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"delete-deck\",\n          onClick: deleteDeck,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Home, \"NGuX+IhPEoaYDnAUn9U4qFBy9U0=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/micha/documents/qualified/Project_Flashcards_Qualified_1/src/Layout/Home.js"],"names":["useEffect","useState","Link","deleteDeck","Home","deck","setDeck","abortController","AbortController","loadDecks","response","fetch","signal","decksFromAPI","json","error","name","console","log","document","title","abort","id","description"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAGA,eAAe,SAASC,IAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAAEC,UAAAA,MAAM,EAAEL,eAAe,CAACK;AAA1B,SAAhC,CAA5B;AACA,cAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAR,QAAAA,OAAO,CAACO,YAAD,CAAP;AACD,OAJD,CAIE,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAHD,MAGO;AACL,gBAAMH,KAAN;AACD;AACF;AACF;;AACDN,IAAAA,SAAS;AAET,WAAO,MAAM;AACXU,MAAAA,QAAQ,CAACC,KAAT,GAAiB,EAAjB;AACA,aAAOb,eAAe,CAACc,KAAhB,EAAP;AACD,KAHD;AAID,GAxBM,EAwBJ,EAxBI,CAAT;;AA0BA,MAAGhB,IAAI,CAACiB,EAAR,EAAY;AACR,wBACI;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,gCACI;AAAA,oBAAKjB,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIX,IAAI,CAACkB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,gBAAT;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAMI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,sBAAT;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAC,aAA3B;AAAyC,UAAA,OAAO,EAAEpB,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBADJ;AAkBH,GAnBD,MAoBI;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GApDuBC,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api\";\r\n\r\n\r\nexport default function Home () {\r\n    const [deck, setDeck] = useState([])\r\n\r\n    useEffect(() => {\r\n        setDeck({});\r\n        const abortController = new AbortController();\r\n        \r\n        async function loadDecks() {\r\n          try {\r\n            const response = await fetch(\"http://localhost:5000/decks\", { signal: abortController.signal });\r\n            const decksFromAPI = await response.json();\r\n            setDeck(decksFromAPI);\r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n            } else {\r\n              throw error;\r\n            }\r\n          }\r\n        }\r\n        loadDecks();\r\n        \r\n        return () => {\r\n          document.title = \"\";\r\n          return abortController.abort();\r\n        };\r\n      }, []);\r\n\r\n    if(deck.id) {\r\n        return (\r\n            <>\r\n            <Link to=\"/decks/new\">\r\n                <button type=\"button\" name=\"create-deck\">+Create New Deck</button>\r\n            </Link>\r\n            <div>\r\n                <h3>{deck.name}</h3>\r\n                <p>{deck.description}</p>\r\n                <Link to=\"/decks/:deckId\">\r\n                    <button type=\"button\" name=\"view-deck\">View</button>\r\n                </Link>\r\n                <Link to=\"/decks/:deckId/study\">\r\n                    <button type=\"button\" name=\"study-deck\">Study</button>\r\n                </Link>\r\n                <button type=\"button\" name=\"delete-deck\" onClick={deleteDeck}>Delete</button>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    else{\r\n        return <p>Loading...</p>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}