{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\documents\\\\qualified\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\DeckBase\\\\DeckCards.js\";\nimport React from \"react\";\nimport { deleteCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckCards({\n  deck,\n  url,\n  history\n}) {\n  async function deleteHandler(card) {\n    const abortController = new AbortController();\n    const confirm = window.confirm(\"Are you sure you want to delete this deck? (Cannot be recovered)\");\n\n    if (confirm) {\n      deleteCard(card.id, abortController.signal);\n      return () => abortController.abort;\n    } else {\n      history.push({\n        url\n      });\n    }\n  }\n\n  const deckCards = deck.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => history.push(`${url}cards/${card.id}/edit`),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteHandler(card),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Cards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          fountSize: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Front:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Back:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), deckCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = DeckCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckCards\");","map":{"version":3,"sources":["C:/Users/micha/documents/qualified/Project_Flashcards_Qualified_1/src/Layout/DeckBase/DeckCards.js"],"names":["React","deleteCard","DeckCards","deck","url","history","deleteHandler","card","abortController","AbortController","confirm","window","id","signal","abort","push","deckCards","cards","map","index","front","back","fountSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAGA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAnB,EAAwC;AACnD,iBAAeC,aAAf,CAA6BC,IAA7B,EAAkC;AAC9B,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kEAAf,CAAhB;;AACA,QAAGA,OAAH,EAAW;AACPT,MAAAA,UAAU,CAACM,IAAI,CAACK,EAAN,EAAUJ,eAAe,CAACK,MAA1B,CAAV;AAEA,aAAO,MAAML,eAAe,CAACM,KAA7B;AACH,KAJD,MAIM;AACFT,MAAAA,OAAO,CAACU,IAAR,CAAa;AAACX,QAAAA;AAAD,OAAb;AACH;AACJ;;AAED,QAAMY,SAAS,GAAGb,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,CAACX,IAAD,EAAMY,KAAN,kBAC7B;AAAA,2BACI;AAAA,8BACI;AAAA,kBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAIhB,OAAO,CAACU,IAAR,CAAc,GAAEX,GAAI,SAAQG,IAAI,CAACK,EAAG,OAApC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMN,aAAa,CAACC,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,OAASY,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADc,CAAlB;AAaA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACI;AAAI,QAAA,KAAK,EAAE;AAACG,UAAAA,SAAS,EAAE;AAAZ,SAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,EAYKN,SAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KA1CuBd,S","sourcesContent":["import React from \"react\"\r\nimport { deleteCard } from \"../../utils/api\"\r\n\r\n\r\nexport default function DeckCards({deck, url, history}){\r\n    async function deleteHandler(card){\r\n        const abortController = new AbortController()\r\n        const confirm = window.confirm(\"Are you sure you want to delete this deck? (Cannot be recovered)\")\r\n        if(confirm){\r\n            deleteCard(card.id, abortController.signal)\r\n\r\n            return () => abortController.abort\r\n        } else{\r\n            history.push({url})\r\n        }\r\n    }\r\n\r\n    const deckCards = deck.cards.map((card,index) => (\r\n        <tbody>\r\n            <tr key={index}>\r\n                <td>{card.front}</td>\r\n                <td>{card.back}</td>\r\n                <button type=\"button\" onClick={()=>history.push(`${url}cards/${card.id}/edit`)}>Edit</button>\r\n                <br />\r\n                <button type=\"button\" onClick={() => deleteHandler(card)}>Delete</button>\r\n                <br />\r\n            </tr>\r\n        </tbody>\r\n    ))\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Cards:</th>\r\n                </tr>\r\n            </thead>\r\n            <thead>\r\n                <tr style={{fountSize: 20}}>\r\n                    <td>Front:</td>\r\n                    <td>Back:</td>\r\n                </tr>\r\n            </thead>\r\n            {deckCards}\r\n        </table>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}