{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\micha\\\\onedrive\\\\documents\\\\school\\\\qualified\\\\project_flashcards_qualified_1\\\\src\\\\Layout\\\\Forms\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckForm({\n  deck,\n  deckFunction\n}) {\n  _s();\n\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [deckData, setDeckData] = useState(initialFormState);\n  const history = useHistory();\n\n  const changeHandler = ({\n    target\n  }) => {\n    setDeckData({ ...deckData,\n      [target.name]: target.value\n    });\n  };\n\n  const submitHandler = (event, deckData) => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    const submittedDeck = deckFunction(deckData, abortController.signal);\n    setDeckData(deck);\n    history.push(`/decks/${submittedDeck.id}/`);\n    return () => abortController.abort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => submitHandler(deckData),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Deck Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: deck.name,\n        onChange: changeHandler,\n        value: deck.name,\n        placeholder: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Deck Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"textarea\",\n        id: \"description\",\n        name: deck.description,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckForm, \"mDOs3x6hKum+Owf9dLWsJWvEMkk=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/users/micha/onedrive/documents/school/qualified/project_flashcards_qualified_1/src/Layout/Forms/DeckForm.js"],"names":["React","useState","useHistory","DeckForm","deck","deckFunction","initialFormState","name","description","deckData","setDeckData","history","changeHandler","target","value","submitHandler","event","preventDefault","abortController","AbortController","submittedDeck","signal","push","id","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAlB,EAAuC;AAAA;;AAClD,QAAMC,gBAAgB,GAAG;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,WAAW,EAAE;AAAxB,GAAzB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACK,gBAAD,CAAxC;AACA,QAAMK,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,aAAa,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AAChCH,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACI,MAAM,CAACN,IAAR,GAAeM,MAAM,CAACC;AAFd,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAQP,QAAR,KAAqB;AACvCO,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,aAAa,GAAGf,YAAY,CAACI,QAAD,EAAWS,eAAe,CAACG,MAA3B,CAAlC;AACAX,IAAAA,WAAW,CAACN,IAAD,CAAX;AACAO,IAAAA,OAAO,CAACW,IAAR,CAAc,UAASF,aAAa,CAACG,EAAG,GAAxC;AAEA,WAAO,MAAML,eAAe,CAACM,KAAhB,EAAb;AACH,GARD;;AAUA,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAE,MAAMT,aAAa,CAACN,QAAD,CAAnC;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,IAAI,EAAEL,IAAI,CAACG,IAHf;AAII,QAAA,QAAQ,EAAEK,aAJd;AAKI,QAAA,KAAK,EAAER,IAAI,CAACG,IALhB;AAMI,QAAA,WAAW,EAAEH,IAAI,CAACG;AANtB;AAAA;AAAA;AAAA;AAAA,cAFR,eAUI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWQ;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,aAFP;AAGI,QAAA,IAAI,EAAEH,IAAI,CAACI,WAHf;AAII,QAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA,cAXR,eAgBI;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAQ,QAAA,OAAO,EAAED,OAAO,CAACW,IAAR,CAAa,GAAb,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA9CuBnB,Q;UAGJD,U;;;KAHIC,Q","sourcesContent":["import React, {useState} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nexport default function DeckForm({deck, deckFunction}){\r\n    const initialFormState = {name: \"\", description: \"\",}\r\n    const [deckData, setDeckData] = useState(initialFormState)\r\n    const history = useHistory()\r\n\r\n    const changeHandler = ({target}) => {\r\n        setDeckData({\r\n            ...deckData,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = (event, deckData) => {\r\n        event.preventDefault()\r\n        const abortController = new AbortController()\r\n        const submittedDeck = deckFunction(deckData, abortController.signal)\r\n        setDeckData(deck)\r\n        history.push(`/decks/${submittedDeck.id}/`)\r\n\r\n        return () => abortController.abort()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <form onSubmit={() => submitHandler(deckData)}>\r\n            <label htmlFor=\"name\">Deck Name:</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"name\" \r\n                    name={deck.name} \r\n                    onChange={changeHandler} \r\n                    value={deck.name} \r\n                    placeholder={deck.name} />\r\n            \r\n            <label htmlFor=\"description\">Deck Description:</label>\r\n                <input \r\n                    type=\"textarea\" \r\n                    id=\"description\" \r\n                    name={deck.description} \r\n                    onChange={changeHandler} />\r\n            <hr />\r\n            <button type=\"submit\">Submit</button>\r\n            <button onClick={history.push(\"/\")}>Cancel</button>           \r\n        </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}